name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Check if user is repository admin
        id: check-admin
        run: |
          # Get the username from the event
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            USERNAME="${{ github.event.comment.user.login }}"
          elif [ "${{ github.event_name }}" = "pull_request_review_comment" ]; then
            USERNAME="${{ github.event.comment.user.login }}"
          elif [ "${{ github.event_name }}" = "pull_request_review" ]; then
            USERNAME="${{ github.event.review.user.login }}"
          elif [ "${{ github.event_name }}" = "issues" ]; then
            USERNAME="${{ github.event.issue.user.login }}"
          fi
          
          echo "Checking repository admin status for user: $USERNAME"
          
          # Check if user has admin permissions on the repository
          PERMISSION_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators/$USERNAME/permission")
          
          PERMISSION_LEVEL=$(echo "$PERMISSION_RESPONSE" | jq -r '.permission // "none"')
          
          echo "Permission level: $PERMISSION_LEVEL"
          
          if [ "$PERMISSION_LEVEL" = "admin" ]; then
            echo "is_admin=true" >> $GITHUB_OUTPUT
            echo "User $USERNAME has admin permissions on the repository"
          else
            echo "is_admin=false" >> $GITHUB_OUTPUT
            echo "User $USERNAME does not have admin permissions on the repository"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        if: steps.check-admin.outputs.is_admin == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        if: steps.check-admin.outputs.is_admin == 'true'
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

